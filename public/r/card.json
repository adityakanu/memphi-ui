{
  "name": "card",
  "type": "registry:ui",
  "files": [
    {
      "type": "registry:ui",
      "content": "import { cn } from \"@/lib/utils\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport * as React from \"react\"\n\nconst cardVariants = cva(\n  [\n    // Base styles\n    \"bg-white border-2 border-black rounded-lg p-6\",\n    \"transition-all duration-300 ease-in-out\",\n    \"shadow-[4px_4px_0px_0px_rgba(0,0,0,1)]\",\n  ],\n  {\n    variants: {\n      variant: {\n        default: \"\",\n        pin: \"relative\",\n        tilt: \"transform -rotate-2 hover:rotate-0 hover:scale-105\",\n      },\n      shadowColor: {\n        default: \"shadow-[4px_4px_0px_0px_rgba(0,0,0,1)]\",\n        red: \"shadow-[4px_4px_0px_0px_oklch(0.7_0.2_27.3)]\",\n        blue: \"shadow-[4px_4px_0px_0px_oklch(0.6_0.2_240)]\",\n        green: \"shadow-[4px_4px_0px_0px_oklch(0.6_0.2_120)]\",\n        yellow: \"shadow-[4px_4px_0px_0px_oklch(0.8_0.2_60)]\",\n        purple: \"shadow-[4px_4px_0px_0px_oklch(0.8_0.2_300)]\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      shadowColor: \"default\",\n    },\n  }\n)\n\nexport interface CardProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof cardVariants> {\n  pinColor?: string\n}\n\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, variant, shadowColor, pinColor = \"oklch(0.7 0.2 27.3)\", ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={cn(cardVariants({ variant, shadowColor }), className)}\n        {...props}\n      >\n        {variant === \"pin\" && (\n          <>\n            {/* Pin entry point on card - dotted circle where needle enters */}\n            <div className=\"absolute top-3 left-2 w-3 h-3 rounded-full border border-dashed border-gray-400\" />\n            \n            {/* Push pin using SVG design */}\n            <div className=\"absolute -top-2 left-3 transform rotate-12\">\n              <svg \n                width=\"32\" \n                height=\"32\" \n                viewBox=\"-35.62 -35.62 580.14 580.14\" \n                className=\"drop-shadow-sm\"\n              >\n                {/* Pin head (red part) */}\n                <path \n                  d=\"M505.605,190.556c-13.789,13.789-66.887-16.949-118.599-68.661 c-51.712-51.712-82.45-104.81-68.661-118.599s66.887,16.949,118.599,68.661S519.394,176.768,505.605,190.556\" \n                  fill={pinColor}\n                  stroke=\"black\"\n                  strokeWidth=\"8\"\n                />\n                <path \n                  d=\"M387.007,121.894c-51.712-51.712-82.45-104.81-68.661-118.599 c-49.991,49.991-39.23,123.065,12.482,174.777s121.671,65.589,171.652,15.607l-0.786-0.821 C483.625,199.435,434.764,169.651,387.007,121.894\" \n                  fill={pinColor}\n                  opacity=\"0.8\"\n                  stroke=\"black\"\n                  strokeWidth=\"4\"\n                />\n                \n                {/* Pin body/shaft */}\n                <path \n                  d=\"M342.08,279.177l58.606-58.606c-24.594-6.727-48.746-21.389-69.853-42.496 c-21.116-21.116-35.257-45.789-41.366-70.991l-59.727,59.719l-48.719,48.719c6.118,25.212,22.581,47.554,43.697,68.661 c21.107,21.116,44.067,36.97,68.661,43.697L342.08,279.177z\" \n                  fill={pinColor}\n                  stroke=\"black\"\n                  strokeWidth=\"6\"\n                />\n                \n                {/* Pin needle */}\n                <polygon \n                  points=\"0,508.9 112.358,346.605 162.295,396.543\" \n                  fill=\"#D9DBE8\"\n                  stroke=\"black\"\n                  strokeWidth=\"4\"\n                />\n                \n                {/* Pin shadow/depth */}\n                <path \n                  d=\"M311.324,389.978c2.348-21.486-1.607-44.226-11.829-68.22l-6.118,6.126 c-24.594-6.735-47.554-22.59-68.661-43.697c-21.116-21.107-37.579-43.458-43.697-68.661l6.241-6.241l-0.274-0.282 c-24.143-10.346-47.016-14.345-68.626-11.979c-40.157,4.378-64.071,45.877-47.634,82.785 c12.509,28.072,35.566,60.734,66.322,91.489c30.746,30.747,63.417,53.813,91.489,66.313 C265.438,454.048,306.937,430.134,311.324,389.978\" \n                  fill={pinColor}\n                  opacity=\"0.7\"\n                  stroke=\"black\"\n                  strokeWidth=\"4\"\n                />\n              </svg>\n            </div>\n          </>\n        )}\n        {props.children}\n      </div>\n    )\n  }\n)\n\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 mb-4\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"text-xl font-bold text-black font-sans uppercase\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-gray-600\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center pt-4 mt-4 border-t-2 border-black border-dashed\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport {\n    Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle\n}\n",
      "path": "ui/card.tsx",
      "target": "components/memphi/ui/card.tsx"
    }
  ]
}